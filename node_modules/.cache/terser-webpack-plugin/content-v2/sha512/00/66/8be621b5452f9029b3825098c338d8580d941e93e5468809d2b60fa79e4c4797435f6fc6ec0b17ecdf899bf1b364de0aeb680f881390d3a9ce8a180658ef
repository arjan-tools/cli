{"code":"!function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=\"./js/localize.js\")}({\"./js/localize.js\":function(module,exports){eval(\"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\\n\\nfunction _nonIterableSpread() { throw new TypeError(\\\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\"); }\\n\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name; if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o); if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\n\\nfunction _iterableToArray(iter) { if (typeof Symbol !== \\\"undefined\\\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\\n\\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\\n\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\n\\n//dropzone\\nvar dropArea = document.getElementById(\\\"drop-area\\\");\\n['dragenter', 'dragover', 'dragleave', 'drop'].forEach(function (eventName) {\\n  dropArea.addEventListener(eventName, preventDefaults, false);\\n  document.body.addEventListener(eventName, preventDefaults, false);\\n});\\n['dragenter', 'dragover'].forEach(function (eventName) {\\n  dropArea.addEventListener(eventName, highlight, false);\\n});\\n['dragleave', 'drop'].forEach(function (eventName) {\\n  dropArea.addEventListener(eventName, unhighlight, false);\\n}); // Handle dropped files\\n\\ndropArea.addEventListener('drop', handleDrop, false);\\n\\nfunction preventDefaults(e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n}\\n\\nfunction highlight(e) {\\n  dropArea.classList.add('highlight');\\n}\\n\\nfunction unhighlight(e) {\\n  dropArea.classList.remove('active');\\n}\\n\\nfunction handleDrop(e) {\\n  var ext = e.dataTransfer.files[0].name.split('.')[1];\\n  console.log(ext);\\n\\n  if (ext === 'html' || ext === 'md' || ext === 'txt') {\\n    var dt = e.dataTransfer;\\n    var files = dt.files;\\n    handleFiles(files);\\n  } else {\\n    document.getElementById('progress-bar').hidden = true;\\n    document.getElementById('fileName').textContent = 'Error. only html, md and txt files supported.';\\n  }\\n}\\n\\nvar uploadProgress = [];\\nvar progressBar = document.getElementById('progress-bar');\\n\\nfunction initializeProgress(numFiles) {\\n  progressBar.value = 0;\\n  uploadProgress = [];\\n\\n  for (var i = numFiles; i > 0; i--) {\\n    uploadProgress.push(0);\\n  }\\n}\\n\\nfunction updateProgress(fileNumber, percent) {\\n  uploadProgress[fileNumber] = percent;\\n  var total = uploadProgress.reduce(function (tot, curr) {\\n    return tot + curr;\\n  }, 0) / uploadProgress.length;\\n  console.debug('update', fileNumber, percent, total);\\n  progressBar.value = total;\\n}\\n\\nfunction handleFiles(files) {\\n  document.getElementById('fileName').textContent = files[0].name;\\n  document.getElementById('progress-bar').hidden = false;\\n  files = _toConsumableArray(files);\\n  initializeProgress(files.length);\\n  files.forEach(uploadFile);\\n}\\n\\nfunction uploadFile(file, i) {\\n  var num = 0;\\n  var ext = \\\"\\\";\\n  var reader = new FileReader();\\n\\n  if (file) {\\n    reader.readAsText(file);\\n    num = document.getElementById('adjuntos_qty');\\n    ext = file.name.split('.').pop().toLowerCase();\\n  }\\n\\n  reader.addEventListener(\\\"progress\\\", function (e) {\\n    updateProgress(i, e.loaded * 100.0 / e.total || 100);\\n  });\\n  reader.addEventListener('loadend', function (e) {\\n    updateProgress(i, 100); // <- Add this\\n  });\\n  reader.addEventListener(\\\"load\\\", function () {\\n    //convert image file to base64 string\\n    console.log(reader.result.length); //AWS API gateway hast a limit of 10MB.\\n\\n    if (reader.result.length < 10380000) {\\n      var sizeMb = reader.result.length * (1 / 1000000);\\n      console.log('total upload size: ', sizeMb);\\n      document.getElementById('file').value = reader.result; //console.log(reader.result)\\n    } else {\\n      alert('You have exceeded the 10MB filesize limit.');\\n    }\\n\\n    ;\\n  }, false);\\n}\\n/* function removePreview(elem){\\n  var colId = elem+'col'\\n  var preview = document.getElementById(colId)\\n  var item = document.getElementById(elem)\\n  var itemSize = 0\\n  if(item.src) itemSize = item.src.length\\n  else if(item.data) itemSize = item.data.length\\n  preview.remove()\\n  document.getElementById('adjuntos_qty').value -= 1\\n  document.getElementById('attchSize').value = parseInt(document.getElementById('attchSize').value) - itemSize\\n} */\\n//submit the form\\n\\n\\n$(function () {\\n  $('#arjantranslate-form').submit(function (e) {\\n    e.preventDefault();\\n    var captcha = grecaptcha.getResponse();\\n\\n    if (captcha.length < 1) {\\n      alert('please fill out the recaptcha');\\n    } else {\\n      $.ajax({\\n        type: \\\"POST\\\",\\n        url: \\\"https://u9thejfp8g.execute-api.us-east-1.amazonaws.com/DeploymentStage/\\\",\\n        dataType: \\\"json\\\",\\n        contentType: \\\"application/json\\\",\\n        data: JSON.stringify({\\n          \\\"id\\\": \\\"\\\",\\n          \\\"from\\\": $('#from').val(),\\n          \\\"to\\\": $('#to').val(),\\n          \\\"file\\\": $('#file').val(),\\n          \\\"email\\\": $('#email').val(),\\n          \\\"captcha\\\": captcha\\n        }),\\n        beforeSend: function beforeSend(data) {\\n          $('#arjantranslate-btn').prop('disabled', true);\\n          $('#arjantranslate-form :input').prop('disabled', true);\\n          $('#arjantranslate-status').show();\\n          $('#arjantranslate-status').addClass('loading');\\n        },\\n        success: function success(data, status, jqXHR) {\\n          if (data && data.html && data.html.length > 1) {\\n            console.log(data);\\n            var destFile = $('#to').val() + '.html';\\n            var destJson = $('#to').val() + '.json';\\n            $('#arjantranslate-status').removeClass('loading');\\n            $('#arjantranslate-status').text(\\\"Done. Your download should start soon.\\\").show();\\n            $('#arjantranslate-form :input').removeProp('disabled');\\n            $('#arjantranslate-btn').removeProp('disabled');\\n            download(destJson, data.locale);\\n            download(destFile, data.html);\\n          } else {\\n            $('#arjantranslate-status').text('Error. Please try again.').show();\\n            $('#arjantranslate-form :input').removeProp('disabled');\\n            $('#arjantranslate-btn').removeProp('disabled');\\n          }\\n        },\\n        error: function error(jqXHR, textStatus, errorThrown) {\\n          $('#arjantranslate-status').text('Error. Please check your network connection and try again.').show();\\n          $('#arjantranslate-form :input').removeProp('disabled');\\n          $('#arjantranslate-btn').removeProp('disabled');\\n        }\\n      });\\n    }\\n  });\\n}); //download the translated html and locale files\\n\\nfunction download(filename, text) {\\n  var element = document.createElement('a');\\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\\n  element.setAttribute('download', filename);\\n  element.style.display = 'none';\\n  document.body.appendChild(element);\\n  element.click();\\n  document.body.removeChild(element);\\n}\\n\\n//# sourceURL=webpack:///./js/localize.js?\")}});","extractedComments":["/*!************************!*\\\n  !*** ./js/localize.js ***!\n  \\************************/","/*! no static exports found */"]}